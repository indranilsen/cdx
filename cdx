#!/bin/bash
# ========================================
#	HEADER
# ========================================

# Author: Indranil Sen
#
# This bash program is a wrapper around
# the cd (chdir - Change Directory) command
# that enhances and expedites traversing
# deep directories.

# ========================================
#	CONSTANTS & VARIABLES
# ========================================

# Constants
VERSION="1.0.0"
SCRIPT_NAME="${BASH_SOURCE[0]}"
SCRIPT_PATH="$(cd "$(dirname "SCRIPT_NAME" )" && pwd)"

# Boolean Variables
valid_directory=1
cd_into_child_directory=0

# Variables
visible_directories=0
hidden_directories=0

# ========================================
#	ARGUMENTS & FLAGS
# ========================================

if [ $# -eq 0 ]; then
    echo 'No argument'
fi

while [ ! $# -eq 0 ]; do
case "$1" in
    --help | -h)
    		echo -n -e "\ncdx [OPTIONS]... [DIRECTORY]...

        Change current directory to specified argument directory with logic
        built in to expedite traversing deep directories.

    	Options:
    	-h, --help                       Print usage information
    	-v, --version                    Prints version to standard output
        \n"
    		exit
    		;;
	--version | -v)
		echo "$VERSION"
		exit
		;;
    *)
        DIRECTORY="${1}"
		if [ ! -d "$DIRECTORY" ]; then
            valid_directory=0
			echo "$DIRECTORY: No such file or directory; $valid_directory"
			exit
		fi
        ;;
esac
shift
done

# ========================================
#	FUNCTIONS
# ========================================

change_directory() {
    echo $1
    echo 'YO'
    cd "$1"
    echo $( pwd )
}

check_number_of_visible_child_directories() {
    visible_directories=$( ls "$DIRECTORY" | wc -l )
    visible_directories=$(( visible_directories ))
}

check_number_of_hidden_child_directories() {
    hidden_directories=$( find ./"$DIRECTORY" -mindepth 1 -maxdepth 1 -name '.*' | wc -l)
    hidden_directories=$(( hidden_directories ))
}

list_child_directories() {
    child_directories=($(ls -d */))
    counter=0
    for directory in ${child_directories[@]}; do
        let counter=counter+1
        echo $counter: $directory
    done
    echo $child_directories
}

prompt_auto_cd_input() {
    while true; do
        read -p "Enter [1-"$1"] or 'q' to exit: " input
        valid=false;
        case $input in
            [1-$1]*) echo yes; break;;
            [Qq]* ) exit;;
            * ) echo "Invalid response.";;
        esac
    done
}

check_child_directories() {
    check_number_of_visible_child_directories
    check_number_of_hidden_child_directories
    echo "$visible_directories :: $hidden_directories"
    if [[ visible_directories -eq 1 ]]; then
        change_directory $DIRECTORY
        #============ Auto change-dir start ============
        $(ls)
        while [ $( ls | wc -l ) -le 5 -o input != "q" -o input != "Q" ]; do
            num_dirs=$( ls -d */ | wc -l )
            num_dirs=$(( num_dirs ))
            if [[ $num_dirs -gt 5 ]]; then
                echo $num_dirs
                ls
                echo exiting
                break
            fi
            #Vars:
            child_directories=(*)
            input=0

            list_child_directories
            prompt_auto_cd_input ${#child_directories[@]}

            if [ input != "q" -o input != "Q" ]; then
                let input=input-1
                change_directory ${child_directories[input]}
            fi
        done
        #============= Auto change-dir end =============
    fi
}

check_child_directories
